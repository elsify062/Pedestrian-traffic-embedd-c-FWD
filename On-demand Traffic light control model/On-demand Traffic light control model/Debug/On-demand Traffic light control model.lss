
On-demand Traffic light control model.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000448  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  00800060  00800060  000004bc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004bc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000170  00000000  00000000  00000528  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f55  00000000  00000000  00000698  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000900  00000000  00000000  000015ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bd3  00000000  00000000  00001eed  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003d8  00000000  00000000  00002ac0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000820  00000000  00000000  00002e98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ed0  00000000  00000000  000036b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  00004588  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 5f 01 	jmp	0x2be	; 0x2be <__vector_1>
   8:	0c 94 86 01 	jmp	0x30c	; 0x30c <__vector_2>
   c:	0c 94 ad 01 	jmp	0x35a	; 0x35a <__vector_3>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 d4 01 	jmp	0x3a8	; 0x3a8 <__vector_10>
  2c:	0c 94 fb 01 	jmp	0x3f6	; 0x3f6 <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	ab 36       	cpi	r26, 0x6B	; 107
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 49 00 	call	0x92	; 0x92 <main>
  74:	0c 94 22 02 	jmp	0x444	; 0x444 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <ledToggle>:


void ledToggle(uint8 num)
{
	
	if (DIO_enutogglePin(num) != E_OK)
  7c:	0e 94 14 01 	call	0x228	; 0x228 <DIO_enutogglePin>
  80:	08 95       	ret

00000082 <ledOff>:
	}
}

void ledOff(uint8 num)
{
	if (DIO_enuWritePin(num,0) != E_OK)
  82:	60 e0       	ldi	r22, 0x00	; 0
  84:	0e 94 6e 00 	call	0xdc	; 0xdc <DIO_enuWritePin>
  88:	08 95       	ret

0000008a <ledOn>:
	}
}

void ledOn(uint8 num)
{
	if (DIO_enuWritePin(num,1) != E_OK)
  8a:	61 e0       	ldi	r22, 0x01	; 1
  8c:	0e 94 6e 00 	call	0xdc	; 0xdc <DIO_enuWritePin>
  90:	08 95       	ret

00000092 <main>:

#define F_CPU	8000000UL
#include <util/delay.h>
int main()
{
	DIO_voidInit();
  92:	0e 94 67 00 	call	0xce	; 0xce <DIO_voidInit>
	while(1)
	{
	ledOn(1);
  96:	81 e0       	ldi	r24, 0x01	; 1
  98:	0e 94 45 00 	call	0x8a	; 0x8a <ledOn>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9c:	2f ef       	ldi	r18, 0xFF	; 255
  9e:	89 e6       	ldi	r24, 0x69	; 105
  a0:	98 e1       	ldi	r25, 0x18	; 24
  a2:	21 50       	subi	r18, 0x01	; 1
  a4:	80 40       	sbci	r24, 0x00	; 0
  a6:	90 40       	sbci	r25, 0x00	; 0
  a8:	e1 f7       	brne	.-8      	; 0xa2 <main+0x10>
  aa:	00 c0       	rjmp	.+0      	; 0xac <main+0x1a>
  ac:	00 00       	nop
	_delay_ms(1000);
	ledOff(1);
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	0e 94 41 00 	call	0x82	; 0x82 <ledOff>
  b4:	2f ef       	ldi	r18, 0xFF	; 255
  b6:	89 e6       	ldi	r24, 0x69	; 105
  b8:	98 e1       	ldi	r25, 0x18	; 24
  ba:	21 50       	subi	r18, 0x01	; 1
  bc:	80 40       	sbci	r24, 0x00	; 0
  be:	90 40       	sbci	r25, 0x00	; 0
  c0:	e1 f7       	brne	.-8      	; 0xba <main+0x28>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <main+0x32>
  c4:	00 00       	nop
	_delay_ms(1000);
	ledToggle(2);
  c6:	82 e0       	ldi	r24, 0x02	; 2
  c8:	0e 94 3e 00 	call	0x7c	; 0x7c <ledToggle>
  cc:	e4 cf       	rjmp	.-56     	; 0x96 <main+0x4>

000000ce <DIO_voidInit>:
  ce:	8f ef       	ldi	r24, 0xFF	; 255
  d0:	8a bb       	out	0x1a, r24	; 26
  d2:	87 bb       	out	0x17, r24	; 23
  d4:	84 bb       	out	0x14, r24	; 20
  d6:	82 e0       	ldi	r24, 0x02	; 2
  d8:	81 bb       	out	0x11, r24	; 17
  da:	08 95       	ret

000000dc <DIO_enuWritePin>:
  dc:	88 30       	cpi	r24, 0x08	; 8
  de:	10 f5       	brcc	.+68     	; 0x124 <DIO_enuWritePin+0x48>
  e0:	66 23       	and	r22, r22
  e2:	19 f0       	breq	.+6      	; 0xea <DIO_enuWritePin+0xe>
  e4:	61 30       	cpi	r22, 0x01	; 1
  e6:	81 f0       	breq	.+32     	; 0x108 <DIO_enuWritePin+0x2c>
  e8:	95 c0       	rjmp	.+298    	; 0x214 <DIO_enuWritePin+0x138>
  ea:	4b b3       	in	r20, 0x1b	; 27
  ec:	21 e0       	ldi	r18, 0x01	; 1
  ee:	30 e0       	ldi	r19, 0x00	; 0
  f0:	b9 01       	movw	r22, r18
  f2:	02 c0       	rjmp	.+4      	; 0xf8 <DIO_enuWritePin+0x1c>
  f4:	66 0f       	add	r22, r22
  f6:	77 1f       	adc	r23, r23
  f8:	8a 95       	dec	r24
  fa:	e2 f7       	brpl	.-8      	; 0xf4 <DIO_enuWritePin+0x18>
  fc:	cb 01       	movw	r24, r22
  fe:	80 95       	com	r24
 100:	84 23       	and	r24, r20
 102:	8b bb       	out	0x1b, r24	; 27
 104:	80 e0       	ldi	r24, 0x00	; 0
 106:	08 95       	ret
 108:	4b b3       	in	r20, 0x1b	; 27
 10a:	21 e0       	ldi	r18, 0x01	; 1
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	b9 01       	movw	r22, r18
 110:	02 c0       	rjmp	.+4      	; 0x116 <DIO_enuWritePin+0x3a>
 112:	66 0f       	add	r22, r22
 114:	77 1f       	adc	r23, r23
 116:	8a 95       	dec	r24
 118:	e2 f7       	brpl	.-8      	; 0x112 <DIO_enuWritePin+0x36>
 11a:	cb 01       	movw	r24, r22
 11c:	84 2b       	or	r24, r20
 11e:	8b bb       	out	0x1b, r24	; 27
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	08 95       	ret
 124:	98 ef       	ldi	r25, 0xF8	; 248
 126:	98 0f       	add	r25, r24
 128:	98 30       	cpi	r25, 0x08	; 8
 12a:	20 f5       	brcc	.+72     	; 0x174 <DIO_enuWritePin+0x98>
 12c:	66 23       	and	r22, r22
 12e:	19 f0       	breq	.+6      	; 0x136 <DIO_enuWritePin+0x5a>
 130:	61 30       	cpi	r22, 0x01	; 1
 132:	89 f0       	breq	.+34     	; 0x156 <DIO_enuWritePin+0x7a>
 134:	71 c0       	rjmp	.+226    	; 0x218 <DIO_enuWritePin+0x13c>
 136:	48 b3       	in	r20, 0x18	; 24
 138:	87 70       	andi	r24, 0x07	; 7
 13a:	21 e0       	ldi	r18, 0x01	; 1
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	b9 01       	movw	r22, r18
 140:	02 c0       	rjmp	.+4      	; 0x146 <DIO_enuWritePin+0x6a>
 142:	66 0f       	add	r22, r22
 144:	77 1f       	adc	r23, r23
 146:	8a 95       	dec	r24
 148:	e2 f7       	brpl	.-8      	; 0x142 <DIO_enuWritePin+0x66>
 14a:	cb 01       	movw	r24, r22
 14c:	80 95       	com	r24
 14e:	84 23       	and	r24, r20
 150:	88 bb       	out	0x18, r24	; 24
 152:	80 e0       	ldi	r24, 0x00	; 0
 154:	08 95       	ret
 156:	48 b3       	in	r20, 0x18	; 24
 158:	87 70       	andi	r24, 0x07	; 7
 15a:	21 e0       	ldi	r18, 0x01	; 1
 15c:	30 e0       	ldi	r19, 0x00	; 0
 15e:	b9 01       	movw	r22, r18
 160:	02 c0       	rjmp	.+4      	; 0x166 <DIO_enuWritePin+0x8a>
 162:	66 0f       	add	r22, r22
 164:	77 1f       	adc	r23, r23
 166:	8a 95       	dec	r24
 168:	e2 f7       	brpl	.-8      	; 0x162 <DIO_enuWritePin+0x86>
 16a:	cb 01       	movw	r24, r22
 16c:	84 2b       	or	r24, r20
 16e:	88 bb       	out	0x18, r24	; 24
 170:	80 e0       	ldi	r24, 0x00	; 0
 172:	08 95       	ret
 174:	90 ef       	ldi	r25, 0xF0	; 240
 176:	98 0f       	add	r25, r24
 178:	98 30       	cpi	r25, 0x08	; 8
 17a:	20 f5       	brcc	.+72     	; 0x1c4 <DIO_enuWritePin+0xe8>
 17c:	66 23       	and	r22, r22
 17e:	19 f0       	breq	.+6      	; 0x186 <DIO_enuWritePin+0xaa>
 180:	61 30       	cpi	r22, 0x01	; 1
 182:	89 f0       	breq	.+34     	; 0x1a6 <DIO_enuWritePin+0xca>
 184:	4b c0       	rjmp	.+150    	; 0x21c <DIO_enuWritePin+0x140>
 186:	45 b3       	in	r20, 0x15	; 21
 188:	87 70       	andi	r24, 0x07	; 7
 18a:	21 e0       	ldi	r18, 0x01	; 1
 18c:	30 e0       	ldi	r19, 0x00	; 0
 18e:	b9 01       	movw	r22, r18
 190:	02 c0       	rjmp	.+4      	; 0x196 <DIO_enuWritePin+0xba>
 192:	66 0f       	add	r22, r22
 194:	77 1f       	adc	r23, r23
 196:	8a 95       	dec	r24
 198:	e2 f7       	brpl	.-8      	; 0x192 <DIO_enuWritePin+0xb6>
 19a:	cb 01       	movw	r24, r22
 19c:	80 95       	com	r24
 19e:	84 23       	and	r24, r20
 1a0:	85 bb       	out	0x15, r24	; 21
 1a2:	80 e0       	ldi	r24, 0x00	; 0
 1a4:	08 95       	ret
 1a6:	45 b3       	in	r20, 0x15	; 21
 1a8:	87 70       	andi	r24, 0x07	; 7
 1aa:	21 e0       	ldi	r18, 0x01	; 1
 1ac:	30 e0       	ldi	r19, 0x00	; 0
 1ae:	b9 01       	movw	r22, r18
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_enuWritePin+0xda>
 1b2:	66 0f       	add	r22, r22
 1b4:	77 1f       	adc	r23, r23
 1b6:	8a 95       	dec	r24
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_enuWritePin+0xd6>
 1ba:	cb 01       	movw	r24, r22
 1bc:	84 2b       	or	r24, r20
 1be:	85 bb       	out	0x15, r24	; 21
 1c0:	80 e0       	ldi	r24, 0x00	; 0
 1c2:	08 95       	ret
 1c4:	98 ee       	ldi	r25, 0xE8	; 232
 1c6:	98 0f       	add	r25, r24
 1c8:	98 30       	cpi	r25, 0x08	; 8
 1ca:	50 f5       	brcc	.+84     	; 0x220 <DIO_enuWritePin+0x144>
 1cc:	66 23       	and	r22, r22
 1ce:	19 f0       	breq	.+6      	; 0x1d6 <DIO_enuWritePin+0xfa>
 1d0:	61 30       	cpi	r22, 0x01	; 1
 1d2:	89 f0       	breq	.+34     	; 0x1f6 <DIO_enuWritePin+0x11a>
 1d4:	27 c0       	rjmp	.+78     	; 0x224 <DIO_enuWritePin+0x148>
 1d6:	42 b3       	in	r20, 0x12	; 18
 1d8:	87 70       	andi	r24, 0x07	; 7
 1da:	21 e0       	ldi	r18, 0x01	; 1
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	b9 01       	movw	r22, r18
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <DIO_enuWritePin+0x10a>
 1e2:	66 0f       	add	r22, r22
 1e4:	77 1f       	adc	r23, r23
 1e6:	8a 95       	dec	r24
 1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <DIO_enuWritePin+0x106>
 1ea:	cb 01       	movw	r24, r22
 1ec:	80 95       	com	r24
 1ee:	84 23       	and	r24, r20
 1f0:	82 bb       	out	0x12, r24	; 18
 1f2:	80 e0       	ldi	r24, 0x00	; 0
 1f4:	08 95       	ret
 1f6:	42 b3       	in	r20, 0x12	; 18
 1f8:	87 70       	andi	r24, 0x07	; 7
 1fa:	21 e0       	ldi	r18, 0x01	; 1
 1fc:	30 e0       	ldi	r19, 0x00	; 0
 1fe:	b9 01       	movw	r22, r18
 200:	02 c0       	rjmp	.+4      	; 0x206 <DIO_enuWritePin+0x12a>
 202:	66 0f       	add	r22, r22
 204:	77 1f       	adc	r23, r23
 206:	8a 95       	dec	r24
 208:	e2 f7       	brpl	.-8      	; 0x202 <DIO_enuWritePin+0x126>
 20a:	cb 01       	movw	r24, r22
 20c:	84 2b       	or	r24, r20
 20e:	82 bb       	out	0x12, r24	; 18
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	08 95       	ret
 214:	82 e0       	ldi	r24, 0x02	; 2
 216:	08 95       	ret
 218:	82 e0       	ldi	r24, 0x02	; 2
 21a:	08 95       	ret
 21c:	82 e0       	ldi	r24, 0x02	; 2
 21e:	08 95       	ret
 220:	82 e0       	ldi	r24, 0x02	; 2
 222:	08 95       	ret
 224:	82 e0       	ldi	r24, 0x02	; 2
 226:	08 95       	ret

00000228 <DIO_enutogglePin>:
 228:	88 30       	cpi	r24, 0x08	; 8
 22a:	70 f4       	brcc	.+28     	; 0x248 <DIO_enutogglePin+0x20>
 22c:	4b b3       	in	r20, 0x1b	; 27
 22e:	21 e0       	ldi	r18, 0x01	; 1
 230:	30 e0       	ldi	r19, 0x00	; 0
 232:	b9 01       	movw	r22, r18
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_enutogglePin+0x12>
 236:	66 0f       	add	r22, r22
 238:	77 1f       	adc	r23, r23
 23a:	8a 95       	dec	r24
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_enutogglePin+0xe>
 23e:	cb 01       	movw	r24, r22
 240:	84 27       	eor	r24, r20
 242:	8b bb       	out	0x1b, r24	; 27
 244:	80 e0       	ldi	r24, 0x00	; 0
 246:	08 95       	ret
 248:	98 ef       	ldi	r25, 0xF8	; 248
 24a:	98 0f       	add	r25, r24
 24c:	98 30       	cpi	r25, 0x08	; 8
 24e:	78 f4       	brcc	.+30     	; 0x26e <DIO_enutogglePin+0x46>
 250:	4b b3       	in	r20, 0x1b	; 27
 252:	87 70       	andi	r24, 0x07	; 7
 254:	21 e0       	ldi	r18, 0x01	; 1
 256:	30 e0       	ldi	r19, 0x00	; 0
 258:	b9 01       	movw	r22, r18
 25a:	02 c0       	rjmp	.+4      	; 0x260 <DIO_enutogglePin+0x38>
 25c:	66 0f       	add	r22, r22
 25e:	77 1f       	adc	r23, r23
 260:	8a 95       	dec	r24
 262:	e2 f7       	brpl	.-8      	; 0x25c <DIO_enutogglePin+0x34>
 264:	cb 01       	movw	r24, r22
 266:	84 27       	eor	r24, r20
 268:	8b bb       	out	0x1b, r24	; 27
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	08 95       	ret
 26e:	90 ef       	ldi	r25, 0xF0	; 240
 270:	98 0f       	add	r25, r24
 272:	98 30       	cpi	r25, 0x08	; 8
 274:	78 f4       	brcc	.+30     	; 0x294 <DIO_enutogglePin+0x6c>
 276:	4b b3       	in	r20, 0x1b	; 27
 278:	87 70       	andi	r24, 0x07	; 7
 27a:	21 e0       	ldi	r18, 0x01	; 1
 27c:	30 e0       	ldi	r19, 0x00	; 0
 27e:	b9 01       	movw	r22, r18
 280:	02 c0       	rjmp	.+4      	; 0x286 <DIO_enutogglePin+0x5e>
 282:	66 0f       	add	r22, r22
 284:	77 1f       	adc	r23, r23
 286:	8a 95       	dec	r24
 288:	e2 f7       	brpl	.-8      	; 0x282 <DIO_enutogglePin+0x5a>
 28a:	cb 01       	movw	r24, r22
 28c:	84 27       	eor	r24, r20
 28e:	8b bb       	out	0x1b, r24	; 27
 290:	80 e0       	ldi	r24, 0x00	; 0
 292:	08 95       	ret
 294:	98 ee       	ldi	r25, 0xE8	; 232
 296:	98 0f       	add	r25, r24
 298:	98 30       	cpi	r25, 0x08	; 8
 29a:	78 f4       	brcc	.+30     	; 0x2ba <DIO_enutogglePin+0x92>
 29c:	4b b3       	in	r20, 0x1b	; 27
 29e:	87 70       	andi	r24, 0x07	; 7
 2a0:	21 e0       	ldi	r18, 0x01	; 1
 2a2:	30 e0       	ldi	r19, 0x00	; 0
 2a4:	b9 01       	movw	r22, r18
 2a6:	02 c0       	rjmp	.+4      	; 0x2ac <DIO_enutogglePin+0x84>
 2a8:	66 0f       	add	r22, r22
 2aa:	77 1f       	adc	r23, r23
 2ac:	8a 95       	dec	r24
 2ae:	e2 f7       	brpl	.-8      	; 0x2a8 <DIO_enutogglePin+0x80>
 2b0:	cb 01       	movw	r24, r22
 2b2:	84 27       	eor	r24, r20
 2b4:	8b bb       	out	0x1b, r24	; 27
 2b6:	80 e0       	ldi	r24, 0x00	; 0
 2b8:	08 95       	ret
 2ba:	82 e0       	ldi	r24, 0x02	; 2
 2bc:	08 95       	ret

000002be <__vector_1>:
 2be:	1f 92       	push	r1
 2c0:	0f 92       	push	r0
 2c2:	0f b6       	in	r0, 0x3f	; 63
 2c4:	0f 92       	push	r0
 2c6:	11 24       	eor	r1, r1
 2c8:	2f 93       	push	r18
 2ca:	3f 93       	push	r19
 2cc:	4f 93       	push	r20
 2ce:	5f 93       	push	r21
 2d0:	6f 93       	push	r22
 2d2:	7f 93       	push	r23
 2d4:	8f 93       	push	r24
 2d6:	9f 93       	push	r25
 2d8:	af 93       	push	r26
 2da:	bf 93       	push	r27
 2dc:	ef 93       	push	r30
 2de:	ff 93       	push	r31
 2e0:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <EXT0CallBack>
 2e4:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <EXT0CallBack+0x1>
 2e8:	09 95       	icall
 2ea:	ff 91       	pop	r31
 2ec:	ef 91       	pop	r30
 2ee:	bf 91       	pop	r27
 2f0:	af 91       	pop	r26
 2f2:	9f 91       	pop	r25
 2f4:	8f 91       	pop	r24
 2f6:	7f 91       	pop	r23
 2f8:	6f 91       	pop	r22
 2fa:	5f 91       	pop	r21
 2fc:	4f 91       	pop	r20
 2fe:	3f 91       	pop	r19
 300:	2f 91       	pop	r18
 302:	0f 90       	pop	r0
 304:	0f be       	out	0x3f, r0	; 63
 306:	0f 90       	pop	r0
 308:	1f 90       	pop	r1
 30a:	18 95       	reti

0000030c <__vector_2>:
 30c:	1f 92       	push	r1
 30e:	0f 92       	push	r0
 310:	0f b6       	in	r0, 0x3f	; 63
 312:	0f 92       	push	r0
 314:	11 24       	eor	r1, r1
 316:	2f 93       	push	r18
 318:	3f 93       	push	r19
 31a:	4f 93       	push	r20
 31c:	5f 93       	push	r21
 31e:	6f 93       	push	r22
 320:	7f 93       	push	r23
 322:	8f 93       	push	r24
 324:	9f 93       	push	r25
 326:	af 93       	push	r26
 328:	bf 93       	push	r27
 32a:	ef 93       	push	r30
 32c:	ff 93       	push	r31
 32e:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 332:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 336:	09 95       	icall
 338:	ff 91       	pop	r31
 33a:	ef 91       	pop	r30
 33c:	bf 91       	pop	r27
 33e:	af 91       	pop	r26
 340:	9f 91       	pop	r25
 342:	8f 91       	pop	r24
 344:	7f 91       	pop	r23
 346:	6f 91       	pop	r22
 348:	5f 91       	pop	r21
 34a:	4f 91       	pop	r20
 34c:	3f 91       	pop	r19
 34e:	2f 91       	pop	r18
 350:	0f 90       	pop	r0
 352:	0f be       	out	0x3f, r0	; 63
 354:	0f 90       	pop	r0
 356:	1f 90       	pop	r1
 358:	18 95       	reti

0000035a <__vector_3>:
 35a:	1f 92       	push	r1
 35c:	0f 92       	push	r0
 35e:	0f b6       	in	r0, 0x3f	; 63
 360:	0f 92       	push	r0
 362:	11 24       	eor	r1, r1
 364:	2f 93       	push	r18
 366:	3f 93       	push	r19
 368:	4f 93       	push	r20
 36a:	5f 93       	push	r21
 36c:	6f 93       	push	r22
 36e:	7f 93       	push	r23
 370:	8f 93       	push	r24
 372:	9f 93       	push	r25
 374:	af 93       	push	r26
 376:	bf 93       	push	r27
 378:	ef 93       	push	r30
 37a:	ff 93       	push	r31
 37c:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <EXT2CallBack>
 380:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <EXT2CallBack+0x1>
 384:	09 95       	icall
 386:	ff 91       	pop	r31
 388:	ef 91       	pop	r30
 38a:	bf 91       	pop	r27
 38c:	af 91       	pop	r26
 38e:	9f 91       	pop	r25
 390:	8f 91       	pop	r24
 392:	7f 91       	pop	r23
 394:	6f 91       	pop	r22
 396:	5f 91       	pop	r21
 398:	4f 91       	pop	r20
 39a:	3f 91       	pop	r19
 39c:	2f 91       	pop	r18
 39e:	0f 90       	pop	r0
 3a0:	0f be       	out	0x3f, r0	; 63
 3a2:	0f 90       	pop	r0
 3a4:	1f 90       	pop	r1
 3a6:	18 95       	reti

000003a8 <__vector_10>:
 3a8:	1f 92       	push	r1
 3aa:	0f 92       	push	r0
 3ac:	0f b6       	in	r0, 0x3f	; 63
 3ae:	0f 92       	push	r0
 3b0:	11 24       	eor	r1, r1
 3b2:	2f 93       	push	r18
 3b4:	3f 93       	push	r19
 3b6:	4f 93       	push	r20
 3b8:	5f 93       	push	r21
 3ba:	6f 93       	push	r22
 3bc:	7f 93       	push	r23
 3be:	8f 93       	push	r24
 3c0:	9f 93       	push	r25
 3c2:	af 93       	push	r26
 3c4:	bf 93       	push	r27
 3c6:	ef 93       	push	r30
 3c8:	ff 93       	push	r31
 3ca:	e0 91 66 00 	lds	r30, 0x0066	; 0x800066 <TIM0_pfCmpFun>
 3ce:	f0 91 67 00 	lds	r31, 0x0067	; 0x800067 <TIM0_pfCmpFun+0x1>
 3d2:	09 95       	icall
 3d4:	ff 91       	pop	r31
 3d6:	ef 91       	pop	r30
 3d8:	bf 91       	pop	r27
 3da:	af 91       	pop	r26
 3dc:	9f 91       	pop	r25
 3de:	8f 91       	pop	r24
 3e0:	7f 91       	pop	r23
 3e2:	6f 91       	pop	r22
 3e4:	5f 91       	pop	r21
 3e6:	4f 91       	pop	r20
 3e8:	3f 91       	pop	r19
 3ea:	2f 91       	pop	r18
 3ec:	0f 90       	pop	r0
 3ee:	0f be       	out	0x3f, r0	; 63
 3f0:	0f 90       	pop	r0
 3f2:	1f 90       	pop	r1
 3f4:	18 95       	reti

000003f6 <__vector_11>:
 3f6:	1f 92       	push	r1
 3f8:	0f 92       	push	r0
 3fa:	0f b6       	in	r0, 0x3f	; 63
 3fc:	0f 92       	push	r0
 3fe:	11 24       	eor	r1, r1
 400:	2f 93       	push	r18
 402:	3f 93       	push	r19
 404:	4f 93       	push	r20
 406:	5f 93       	push	r21
 408:	6f 93       	push	r22
 40a:	7f 93       	push	r23
 40c:	8f 93       	push	r24
 40e:	9f 93       	push	r25
 410:	af 93       	push	r26
 412:	bf 93       	push	r27
 414:	ef 93       	push	r30
 416:	ff 93       	push	r31
 418:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <TIM0_pfOvfFun>
 41c:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <TIM0_pfOvfFun+0x1>
 420:	09 95       	icall
 422:	ff 91       	pop	r31
 424:	ef 91       	pop	r30
 426:	bf 91       	pop	r27
 428:	af 91       	pop	r26
 42a:	9f 91       	pop	r25
 42c:	8f 91       	pop	r24
 42e:	7f 91       	pop	r23
 430:	6f 91       	pop	r22
 432:	5f 91       	pop	r21
 434:	4f 91       	pop	r20
 436:	3f 91       	pop	r19
 438:	2f 91       	pop	r18
 43a:	0f 90       	pop	r0
 43c:	0f be       	out	0x3f, r0	; 63
 43e:	0f 90       	pop	r0
 440:	1f 90       	pop	r1
 442:	18 95       	reti

00000444 <_exit>:
 444:	f8 94       	cli

00000446 <__stop_program>:
 446:	ff cf       	rjmp	.-2      	; 0x446 <__stop_program>
